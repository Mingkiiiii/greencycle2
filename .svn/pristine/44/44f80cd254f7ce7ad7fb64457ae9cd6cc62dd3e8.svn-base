<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greencycle.my.member.dao.IMemberDAO">

<!-- Member 검색을 위한 SQL 프래그먼트 -->
<sql id="MemberSearch">
    <!-- 검색어가 빈 문자열이 아닌 경우 -->
    <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
        <!-- 검색 유형에 따라 다른 조건을 생성 -->
        <choose>
            <!-- 검색 유형이 'I' (회원ID/이메일) 인 경우 -->
            <when test='searchType=="I"' >
                AND user_id LIKE '%' || #{searchWord} || '%'
            </when>
            <!-- 검색 유형이 'N' (이름) 인 경우 -->
            <when test='searchType=="N"'>
                AND user_nick LIKE '%' || #{searchWord} || '%'
            </when>
        </choose>
    </if>

</sql>

<!-- CsVO 객체 목록을 가져오는 쿼리 -->
<select id="getAllUsers" resultType="MemberVO" parameterType="MemberSearchVO">
  SELECT *
FROM (
       SELECT t1.*, rownum as rnum
       FROM (
           SELECT 
                  user_id
                , user_nick
                , is_admin
                , user_point
                , user_banned
            FROM 
              Users
           WHERE 1=1
           <!-- 검색 프래그먼트를 포함 -->
           <include refid="MemberSearch"></include>
          ) T1
             ORDER BY user_id asc
      )
      WHERE rnum BETWEEN #{firstRow} AND #{lastRow}
</select>
   
<!-- CsVO 객체의 총 행 수를 가져오는 쿼리 -->    
         <select id="getTotalRowCount" parameterType="MemberSearchVO" resultType="int">
             SELECT count(*)
             FROM users
             WHERE 1=1
             <!-- Cs 검색 프래그먼트를 포함 -->
             <include refid="MemberSearch"/>
         </select>




   <insert id="registMember" parameterType="MemberVO">
      INSERT INTO users (user_id, user_pw, user_nick, user_name, user_phone, user_post, user_addr, user_subaddr,user_detailaddr,user_Profile )
      VALUES (#{userId}, #{userPw}, #{userNick}, #{userName}, #{userPhone}, #{userPost}, #{userAddr}, #{userSubaddr}, #{userDetailaddr}, #{userProfile})
   </insert>



   <update id="profileUpload" parameterType="MemberVO">
      UPDATE users
      SET
      user_Profile = #{userProfile}
      WHERE user_id = #{userId}
   </update>
   
   <select id="loginMember" parameterType="MemberVO" resultType="MemberVO">
       SELECT user_id
             ,user_pw
             ,user_name
             ,user_nick
             ,user_profile
             ,user_addr
             ,user_subaddr
             ,user_phone
             ,is_admin
             ,user_detailaddr
             ,user_post
             ,user_banned
        FROM users 
        WHERE user_id = #{userId}
   </select>
   
      <select id="loginNo" parameterType="MemberVO" resultType="MemberVO">
       SELECT user_id
             ,user_pw
             ,user_name
             ,user_nick
             ,user_profile
             ,user_addr
             ,user_subaddr
             ,user_phone
             ,is_admin
             ,user_detailaddr
             ,user_post
        FROM users 
        WHERE user_id = #{userId}
        AND USER_BANNED = 'Y'
   </select>
   
   <select id="getMemberById" resultType="MemberVO">
       SELECT * FROM users WHERE user_id = #{userId}
   </select>
<update id="updateMember" parameterType="MemberVO">
    UPDATE users 
    SET user_nick = #{userNick}
    WHERE user_id = #{userId}
</update>
<select id="getAllMembers" resultType="MemberVO">
       SELECT * FROM users WHERE user_id = #{userId}
   </select>
   
<!--    <select id="getAllUsers"
      resultType="com.greencycle.my.member.vo.MemberVO">
      SELECT user_id
      ,user_nick
      ,is_Admin
      FROM users
   </select> -->

<update id="updateUsersGrades" parameterType="MemberVO">
     UPDATE Users
      SET is_admin = #{newGrade},
          user_banned = #{newBanned}   
      WHERE user_id = #{userId}
</update>

   <select id="loginMember2" parameterType="MemberVO" resultType="MemberVO">
      SELECT user_id
             ,user_pw
             ,user_name
             ,user_nick
             ,user_profile
             ,user_addr
             ,user_subaddr
             ,user_phone
             ,is_admin
             ,user_detailaddr
             ,user_post FROM users
      WHERE user_id = #{userId}
   
   </select>
   

</mapper>