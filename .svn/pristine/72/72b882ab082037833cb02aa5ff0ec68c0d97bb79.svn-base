<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greencycle.my.sell.dao.SellDAO">

	<!-- sell Board 검색을 위한 SQL 프래그먼트 -->
	<sql id="sellViewSearch">
		<!-- 검색어가 빈 문자열이 아닌 경우 -->
		<if	test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
			<!-- 검색 유형에 따라 다른 조건을 생성 -->
			<choose>
				<!-- 검색 유형이 'N' (제목) 인 경우 -->
				<when test='searchType=="N"'>
					AND sales_name LIKE '%' || #{searchWord} || '%'
				</when>
				<!-- 검색 유형이 'W' (작성자) 인 경우 -->
				<when test='searchType=="W"'>
					<!-- user_id를 이용하여 작성자의 닉네임을 가져옴 -->
					AND a.user_id IN (SELECT user_id FROM users WHERE user_nick LIKE
					'%' || #{searchWord} || '%')
				</when>
				<!-- 검색 유형이 'C' (내용) 인 경우 -->
				<when test='searchType=="C"'>
					AND sales_content LIKE '%' || #{searchWord} || '%'
				</when>
			</choose>
		</if>
		<!-- 검색 카테고리가 빈 문자열이 아닌 경우 -->
		<if
			test="!@org.apache.commons.lang3.StringUtils@isBlank(searchCategory)">
			AND sales_category = #{searchCategory}
		</if>
		<if	test="!@org.apache.commons.lang3.StringUtils@isBlank(searchGroup)">
			AND sales_status = #{searchGroup}
		</if>
		
	</sql>

	<!-- CsVO 객체의 총 행 수를 가져오는 쿼리 -->
	<select id="getTotalRowCount" parameterType="SellVO"
		resultType="int">
		SELECT count(*)
		FROM sales a, users b
		WHERE a.user_id = b.user_id
		<!-- Cs 검색 프래그먼트를 포함 -->
		<include refid="sellViewSearch"></include>
		AND a.sales_del_yn = 'N'
	</select>



	<!-- CsVO 객체 목록을 가져오는 쿼리 -->
	<select id="getSellsList" resultType="SellVO"
		parameterType="SellSearchVO">
		SELECT *
		FROM (
		SELECT t1.*, rownum as rnum
		FROM (
		SELECT a.sales_no
		, a.sales_name
		, a.sales_price
		, a.sales_category
		, a.sales_image
		, a.user_id
		, a.sales_content
		, b.user_nick
		, TO_CHAR(a.sales_date, 'YYYY/MM/dd') as sales_date
		, a.sales_addr
		, a.sales_status
		FROM sales a, users b
		WHERE a.user_id = b.user_id
		<!-- Free Board 검색 프래그먼트를 포함 -->
		<include refid="sellViewSearch" />
		AND a.sales_del_yn = 'N'
		ORDER BY sales_no DESC
		) T1
		)
		WHERE rnum BETWEEN #{firstRow} AND #{lastRow}
	</select>



	<select id="getSellList" resultType="SellVO">
		SELECT a.sales_no
		,a.sales_name
		, a.sales_price
		, a.sales_image
		, a.user_id
		,
		a.sales_content
		, b.user_nick
		, TO_CHAR(a.sales_date, 'YYYY/MM/dd') as
		sales_date
		, a.sales_addr
		, a.sales_status

		FROM
		sales a, users b
		WHERE a.user_id = b.user_id
		AND
		a.sales_del_yn = 'N'
	</select>
	<select id="getSellList2" resultType="SellVO">
		SELECT a.sales_no
		,a.sales_name
		, a.sales_price
		, a.sales_image
		, a.user_id
		,
		a.sales_content
		, b.user_nick
		, TO_CHAR(a.sales_date, 'YYYY/MM/dd') as
		sales_date
		, a.sales_addr
		, a.sales_status

		FROM
		sales a, users b
		WHERE a.user_id = b.user_id
		AND
		a.sales_del_yn = 'N'
		AND
		a.sales_status = '판매중'
	</select>

	<insert id="insertSell" parameterType="SellVO">
		INSERT INTO sales
		(sales_no, sales_price,sales_name, sales_content, sales_image, sales_status,
		sales_addr, sales_category, user_id)
		VALUES ((SELECT NVL(MAX(sales_no),0) + 1
		FROM
		sales), #{salesPrice}, #{salesName}, #{salesContent},
		#{salesImage}, #{salesStatus},
		#{salesAddr}, #{salesCategory},#{userId})
	</insert>
	<select id="getSell" resultType="SellVO" parameterType="int">

		SELECT a.sales_no
		, a.sales_name
		, a.sales_content
		, a.sales_image
		, a.user_id
		, a.sales_price
		, b.user_nick
		, TO_CHAR(a.sales_date, 'YYYY/MM/dd') as sales_date
		, a.sales_addr
		, a.sales_status

		FROM
		sales a
		JOIN
		users b ON a.user_id = b.user_id

		WHERE
		a.sales_no = #{salesNo}
		AND a.sales_del_yn = 'N'



	</select>
	<update id="updateSell" parameterType="SellVO">
		UPDATE sales
		SET
		sales_name
		= #{salesName}
		,sales_price= #{salesPrice}
		,sales_status= #{salesStatus}
		,sales_image = #{salesImage}
		,sales_content = #{salesContent}
		,sales_date = SYSDATE
		,sales_addr = #{salesAddr}
		WHERE sales_no =
		#{salesNo}
	</update>
	<update id="deleteSell" parameterType="int">
		UPDATE sales
		SET
		sales_del_yn
		='Y'
		WHERE sales_no = #{salesNo}
	</update>
</mapper>

